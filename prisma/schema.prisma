// Desenyon: InfiniteIdea Database Schema
// This schema defines the core data models for the AI-powered blueprint generation platform

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User Management
model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  image         String?
  emailVerified DateTime?
  
  // Subscription and preferences
  subscription  SubscriptionTier @default(FREE)
  preferences   Json?            // UserPreferences object
  
  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  accounts Account[]
  sessions Session[]
  projects Project[]
  
  @@map("users")
}

// NextAuth.js required models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

// Core Application Models
model Project {
  id           String        @id @default(cuid())
  userId       String
  name         String
  description  String?
  originalIdea String        @db.Text
  
  // Project status and metadata
  status       ProjectStatus @default(DRAFT)
  category     String?       // Industry category
  complexity   String?       // ComplexityLevel
  
  // Blueprint data (stored as JSON for flexibility)
  blueprint    Json?         // Complete Blueprint object
  
  // Generation metadata
  generatedAt  DateTime?
  lastModified DateTime      @updatedAt
  
  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  templates Template[]
  
  @@map("projects")
}

model Template {
  id          String   @id @default(cuid())
  name        String
  description String?
  category    String   // Template category (e.g., "E-commerce", "SaaS", "Mobile App")
  
  // Template data
  templateData Json    // Pre-built template structure
  
  // Usage and rating
  usageCount  Int      @default(0)
  rating      Float?   @default(0)
  
  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  projects Project[]
  
  @@map("templates")
}

// Analytics and Usage Tracking
model Analytics {
  id        String   @id @default(cuid())
  userId    String?  // Optional - can track anonymous usage
  projectId String?
  
  // Event tracking
  eventType String   // e.g., "idea_submitted", "blueprint_generated", "export_pdf"
  eventData Json?    // Additional event metadata
  
  // Performance metrics
  duration  Int?     // Processing time in milliseconds
  success   Boolean  @default(true)
  errorCode String?
  
  // Timestamps
  createdAt DateTime @default(now())
  
  @@map("analytics")
}

// Generation Queue for background processing
model GenerationJob {
  id          String    @id @default(cuid())
  userId      String
  projectId   String
  
  // Job details
  jobType     String    // e.g., "full_blueprint", "tech_stack_only"
  status      JobStatus @default(PENDING)
  priority    Int       @default(0)
  
  // Job data
  inputData   Json      // Original input parameters
  outputData  Json?     // Generated results
  
  // Progress tracking
  progress    Int       @default(0) // 0-100
  currentStep String?   // Current generation step
  
  // Error handling
  errorMessage String?
  retryCount   Int      @default(0)
  maxRetries   Int      @default(3)
  
  // Timestamps
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  startedAt   DateTime?
  completedAt DateTime?
  
  @@map("generation_jobs")
}

// Enums
enum SubscriptionTier {
  FREE
  PRO
  ENTERPRISE
}

enum ProjectStatus {
  DRAFT
  GENERATING
  COMPLETED
  FAILED
  ARCHIVED
}

enum JobStatus {
  PENDING
  RUNNING
  COMPLETED
  FAILED
  CANCELLED
}
